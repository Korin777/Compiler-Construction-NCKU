State 38 conflicts: 1 shift/reduce
State 100 conflicts: 13 shift/reduce
State 106 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: Statement StatementList
    3              | %empty

    4 Statement: DeclarationStmt
    5          | AssignmentStmt
    6          | ArithmeticStmt
    7          | IncDecStmt
    8          | Block
    9          | IfStmt
   10          | WhileStmt
   11          | ForStmt
   12          | PrintStmt

   13 DeclarationStmt: Type IDENT SEMICOLON
   14                | Type IDENT LBRACK Expression RBRACK SEMICOLON
   15                | Type IDENT assign_op Expression SEMICOLON

   16 AssignmentStmt: AssignmentExpr SEMICOLON

   17 AssignmentExpr: Expression assign_op Expression

   18 assign_op: ASSIGN
   19          | ADD_ASSIGN
   20          | SUB_ASSIGN
   21          | MUL_ASSIGN
   22          | QUO_ASSIGN
   23          | REM_ASSIGN

   24 ArithmeticStmt: ArithmeticExpr SEMICOLON

   25 ArithmeticExpr: Expression

   26 IncDecStmt: IncDecExpr SEMICOLON

   27 IncDecExpr: Expression INC
   28           | Expression DEC

   29 IfStmt: IF Condition Block
   30       | IF Condition Block ELSE IfStmt
   31       | IF Condition Block ELSE Block

   32 Condition: Expression

   33 WhileStmt: BEGIN WHILE LPAREN Condition RPAREN Block END

   34 BEGIN: %empty

   35 END: %empty

   36 ForStmt: FOR LPAREN ForClause RPAREN Block

   37 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   38 InitStmt: SimpleExpr

   39 PostStmt: SimpleExpr

   40 SimpleExpr: AssignmentExpr
   41           | Expression
   42           | IncDecExpr

   43 Block: INCSYBOLTABLECURRENTBRACE StatementList RBRACE

   44 INCSYBOLTABLECURRENTBRACE: LBRACE

   45 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON

   46 Expression: UnaryExpr
   47           | Expression binary_op Expression

   48 UnaryExpr: PrimaryExpr
   49          | unary_op UnaryExpr

   50 binary_op: OR
   51          | AND
   52          | cmp_op
   53          | add_op
   54          | mul_op

   55 cmp_op: EQL
   56       | NEQ
   57       | LSS
   58       | LEQ
   59       | GTR
   60       | GEQ

   61 add_op: ADD
   62       | SUB

   63 mul_op: MUL
   64       | QUO
   65       | REM

   66 unary_op: ADD
   67         | SUB
   68         | NOT

   69 PrimaryExpr: Operand
   70            | IndexExpr
   71            | ConversionExpr

   72 Operand: Literal
   73        | IDENT
   74        | INCPRECEDENCELPAREN Expression RPAREN

   75 INCPRECEDENCELPAREN: LPAREN

   76 Literal: INT_LIT
   77        | FLOAT_LIT
   78        | BOOL_LIT
   79        | STRING_LIT

   80 IndexExpr: PrimaryExpr LBRACK Expression RBRACK

   81 ConversionExpr: LPAREN Type RPAREN Expression

   82 Type: TypeName

   83 TypeName: INT
   84         | FLOAT
   85         | STRING
   86         | BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 61 66
SUB (259) 62 67
MUL (260) 63
QUO (261) 64
REM (262) 65
INC (263) 27
DEC (264) 28
GTR (265) 59
LSS (266) 57
GEQ (267) 60
LEQ (268) 58
EQL (269) 55
NEQ (270) 56
ASSIGN (271) 18
ADD_ASSIGN (272) 19
SUB_ASSIGN (273) 20
MUL_ASSIGN (274) 21
QUO_ASSIGN (275) 22
REM_ASSIGN (276) 23
AND (277) 51
OR (278) 50
NOT (279) 68
LPAREN (280) 33 36 45 75 81
RPAREN (281) 33 36 45 74 81
LBRACE (282) 44
RBRACE (283) 43
LBRACK (284) 14 80
RBRACK (285) 14 80
SEMICOLON (286) 13 14 15 16 24 26 37 45
PRINT (287) 45
IF (288) 29 30 31
ELSE (289) 30 31
FOR (290) 36
WHILE (291) 33
INT_LIT (292) 76
FLOAT_LIT (293) 77
STRING_LIT (294) 79
IDENT (295) 13 14 15 73
INT (296) 83
FLOAT (297) 84
STRING (298) 85
BOOL_LIT (299) 78
BOOL (300) 86


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Program (47)
    on left: 1, on right: 0
StatementList (48)
    on left: 2 3, on right: 1 2 43
Statement (49)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2
DeclarationStmt (50)
    on left: 13 14 15, on right: 4
AssignmentStmt (51)
    on left: 16, on right: 5
AssignmentExpr (52)
    on left: 17, on right: 16 40
assign_op (53)
    on left: 18 19 20 21 22 23, on right: 15 17
ArithmeticStmt (54)
    on left: 24, on right: 6
ArithmeticExpr (55)
    on left: 25, on right: 24
IncDecStmt (56)
    on left: 26, on right: 7
IncDecExpr (57)
    on left: 27 28, on right: 26 42
IfStmt (58)
    on left: 29 30 31, on right: 9 30
Condition (59)
    on left: 32, on right: 29 30 31 33 37
WhileStmt (60)
    on left: 33, on right: 10
BEGIN (61)
    on left: 34, on right: 33
END (62)
    on left: 35, on right: 33
ForStmt (63)
    on left: 36, on right: 11
ForClause (64)
    on left: 37, on right: 36
InitStmt (65)
    on left: 38, on right: 37
PostStmt (66)
    on left: 39, on right: 37
SimpleExpr (67)
    on left: 40 41 42, on right: 38 39
Block (68)
    on left: 43, on right: 8 29 30 31 33 36
INCSYBOLTABLECURRENTBRACE (69)
    on left: 44, on right: 43
PrintStmt (70)
    on left: 45, on right: 12
Expression (71)
    on left: 46 47, on right: 14 15 17 25 27 28 32 41 45 47 74 80 81
UnaryExpr (72)
    on left: 48 49, on right: 46 49
binary_op (73)
    on left: 50 51 52 53 54, on right: 47
cmp_op (74)
    on left: 55 56 57 58 59 60, on right: 52
add_op (75)
    on left: 61 62, on right: 53
mul_op (76)
    on left: 63 64 65, on right: 54
unary_op (77)
    on left: 66 67 68, on right: 49
PrimaryExpr (78)
    on left: 69 70 71, on right: 48 80
Operand (79)
    on left: 72 73 74, on right: 69
INCPRECEDENCELPAREN (80)
    on left: 75, on right: 74
Literal (81)
    on left: 76 77 78 79, on right: 72
IndexExpr (82)
    on left: 80, on right: 70
ConversionExpr (83)
    on left: 81, on right: 71
Type (84)
    on left: 82, on right: 13 14 15 81
TypeName (85)
    on left: 83 84 85 86, on right: 82


State 0

    0 $accept: . Program $end

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    STRING      shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    BOOL        shift, and go to state 17

    WHILE     reduce using rule 34 (BEGIN)
    $default  reduce using rule 3 (StatementList)

    Program                    go to state 18
    StatementList              go to state 19
    Statement                  go to state 20
    DeclarationStmt            go to state 21
    AssignmentStmt             go to state 22
    AssignmentExpr             go to state 23
    ArithmeticStmt             go to state 24
    ArithmeticExpr             go to state 25
    IncDecStmt                 go to state 26
    IncDecExpr                 go to state 27
    IfStmt                     go to state 28
    WhileStmt                  go to state 29
    BEGIN                      go to state 30
    ForStmt                    go to state 31
    Block                      go to state 32
    INCSYBOLTABLECURRENTBRACE  go to state 33
    PrintStmt                  go to state 34
    Expression                 go to state 35
    UnaryExpr                  go to state 36
    unary_op                   go to state 37
    PrimaryExpr                go to state 38
    Operand                    go to state 39
    INCPRECEDENCELPAREN        go to state 40
    Literal                    go to state 41
    IndexExpr                  go to state 42
    ConversionExpr             go to state 43
    Type                       go to state 44
    TypeName                   go to state 45


State 1

   66 unary_op: ADD .

    $default  reduce using rule 66 (unary_op)


State 2

   67 unary_op: SUB .

    $default  reduce using rule 67 (unary_op)


State 3

   68 unary_op: NOT .

    $default  reduce using rule 68 (unary_op)


State 4

   75 INCPRECEDENCELPAREN: LPAREN .
   81 ConversionExpr: LPAREN . Type RPAREN Expression

    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    STRING  shift, and go to state 15
    BOOL    shift, and go to state 17

    $default  reduce using rule 75 (INCPRECEDENCELPAREN)

    Type      go to state 46
    TypeName  go to state 45


State 5

   44 INCSYBOLTABLECURRENTBRACE: LBRACE .

    $default  reduce using rule 44 (INCSYBOLTABLECURRENTBRACE)


State 6

   45 PrintStmt: PRINT . LPAREN Expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 47


State 7

   29 IfStmt: IF . Condition Block
   30       | IF . Condition Block ELSE IfStmt
   31       | IF . Condition Block ELSE Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Condition            go to state 48
    Expression           go to state 49
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 8

   36 ForStmt: FOR . LPAREN ForClause RPAREN Block

    LPAREN  shift, and go to state 50


State 9

   76 Literal: INT_LIT .

    $default  reduce using rule 76 (Literal)


State 10

   77 Literal: FLOAT_LIT .

    $default  reduce using rule 77 (Literal)


State 11

   79 Literal: STRING_LIT .

    $default  reduce using rule 79 (Literal)


State 12

   73 Operand: IDENT .

    $default  reduce using rule 73 (Operand)


State 13

   83 TypeName: INT .

    $default  reduce using rule 83 (TypeName)


State 14

   84 TypeName: FLOAT .

    $default  reduce using rule 84 (TypeName)


State 15

   85 TypeName: STRING .

    $default  reduce using rule 85 (TypeName)


State 16

   78 Literal: BOOL_LIT .

    $default  reduce using rule 78 (Literal)


State 17

   86 TypeName: BOOL .

    $default  reduce using rule 86 (TypeName)


State 18

    0 $accept: Program . $end

    $end  shift, and go to state 51


State 19

    1 Program: StatementList .

    $default  reduce using rule 1 (Program)


State 20

    2 StatementList: Statement . StatementList

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    STRING      shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    BOOL        shift, and go to state 17

    WHILE     reduce using rule 34 (BEGIN)
    $default  reduce using rule 3 (StatementList)

    StatementList              go to state 52
    Statement                  go to state 20
    DeclarationStmt            go to state 21
    AssignmentStmt             go to state 22
    AssignmentExpr             go to state 23
    ArithmeticStmt             go to state 24
    ArithmeticExpr             go to state 25
    IncDecStmt                 go to state 26
    IncDecExpr                 go to state 27
    IfStmt                     go to state 28
    WhileStmt                  go to state 29
    BEGIN                      go to state 30
    ForStmt                    go to state 31
    Block                      go to state 32
    INCSYBOLTABLECURRENTBRACE  go to state 33
    PrintStmt                  go to state 34
    Expression                 go to state 35
    UnaryExpr                  go to state 36
    unary_op                   go to state 37
    PrimaryExpr                go to state 38
    Operand                    go to state 39
    INCPRECEDENCELPAREN        go to state 40
    Literal                    go to state 41
    IndexExpr                  go to state 42
    ConversionExpr             go to state 43
    Type                       go to state 44
    TypeName                   go to state 45


State 21

    4 Statement: DeclarationStmt .

    $default  reduce using rule 4 (Statement)


State 22

    5 Statement: AssignmentStmt .

    $default  reduce using rule 5 (Statement)


State 23

   16 AssignmentStmt: AssignmentExpr . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 24

    6 Statement: ArithmeticStmt .

    $default  reduce using rule 6 (Statement)


State 25

   24 ArithmeticStmt: ArithmeticExpr . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 26

    7 Statement: IncDecStmt .

    $default  reduce using rule 7 (Statement)


State 27

   26 IncDecStmt: IncDecExpr . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 28

    9 Statement: IfStmt .

    $default  reduce using rule 9 (Statement)


State 29

   10 Statement: WhileStmt .

    $default  reduce using rule 10 (Statement)


State 30

   33 WhileStmt: BEGIN . WHILE LPAREN Condition RPAREN Block END

    WHILE  shift, and go to state 56


State 31

   11 Statement: ForStmt .

    $default  reduce using rule 11 (Statement)


State 32

    8 Statement: Block .

    $default  reduce using rule 8 (Statement)


State 33

   43 Block: INCSYBOLTABLECURRENTBRACE . StatementList RBRACE

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    STRING      shift, and go to state 15
    BOOL_LIT    shift, and go to state 16
    BOOL        shift, and go to state 17

    WHILE     reduce using rule 34 (BEGIN)
    $default  reduce using rule 3 (StatementList)

    StatementList              go to state 57
    Statement                  go to state 20
    DeclarationStmt            go to state 21
    AssignmentStmt             go to state 22
    AssignmentExpr             go to state 23
    ArithmeticStmt             go to state 24
    ArithmeticExpr             go to state 25
    IncDecStmt                 go to state 26
    IncDecExpr                 go to state 27
    IfStmt                     go to state 28
    WhileStmt                  go to state 29
    BEGIN                      go to state 30
    ForStmt                    go to state 31
    Block                      go to state 32
    INCSYBOLTABLECURRENTBRACE  go to state 33
    PrintStmt                  go to state 34
    Expression                 go to state 35
    UnaryExpr                  go to state 36
    unary_op                   go to state 37
    PrimaryExpr                go to state 38
    Operand                    go to state 39
    INCPRECEDENCELPAREN        go to state 40
    Literal                    go to state 41
    IndexExpr                  go to state 42
    ConversionExpr             go to state 43
    Type                       go to state 44
    TypeName                   go to state 45


State 34

   12 Statement: PrintStmt .

    $default  reduce using rule 12 (Statement)


State 35

   17 AssignmentExpr: Expression . assign_op Expression
   25 ArithmeticExpr: Expression .
   27 IncDecExpr: Expression . INC
   28           | Expression . DEC
   47 Expression: Expression . binary_op Expression

    ADD         shift, and go to state 58
    SUB         shift, and go to state 59
    MUL         shift, and go to state 60
    QUO         shift, and go to state 61
    REM         shift, and go to state 62
    INC         shift, and go to state 63
    DEC         shift, and go to state 64
    GTR         shift, and go to state 65
    LSS         shift, and go to state 66
    GEQ         shift, and go to state 67
    LEQ         shift, and go to state 68
    EQL         shift, and go to state 69
    NEQ         shift, and go to state 70
    ASSIGN      shift, and go to state 71
    ADD_ASSIGN  shift, and go to state 72
    SUB_ASSIGN  shift, and go to state 73
    MUL_ASSIGN  shift, and go to state 74
    QUO_ASSIGN  shift, and go to state 75
    REM_ASSIGN  shift, and go to state 76
    AND         shift, and go to state 77
    OR          shift, and go to state 78

    $default  reduce using rule 25 (ArithmeticExpr)

    assign_op  go to state 79
    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 36

   46 Expression: UnaryExpr .

    $default  reduce using rule 46 (Expression)


State 37

   49 UnaryExpr: unary_op . UnaryExpr

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    UnaryExpr            go to state 84
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 38

   48 UnaryExpr: PrimaryExpr .
   80 IndexExpr: PrimaryExpr . LBRACK Expression RBRACK

    LBRACK  shift, and go to state 85

    LBRACK    [reduce using rule 48 (UnaryExpr)]
    $default  reduce using rule 48 (UnaryExpr)


State 39

   69 PrimaryExpr: Operand .

    $default  reduce using rule 69 (PrimaryExpr)


State 40

   74 Operand: INCPRECEDENCELPAREN . Expression RPAREN

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Expression           go to state 86
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 41

   72 Operand: Literal .

    $default  reduce using rule 72 (Operand)


State 42

   70 PrimaryExpr: IndexExpr .

    $default  reduce using rule 70 (PrimaryExpr)


State 43

   71 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 71 (PrimaryExpr)


State 44

   13 DeclarationStmt: Type . IDENT SEMICOLON
   14                | Type . IDENT LBRACK Expression RBRACK SEMICOLON
   15                | Type . IDENT assign_op Expression SEMICOLON

    IDENT  shift, and go to state 87


State 45

   82 Type: TypeName .

    $default  reduce using rule 82 (Type)


State 46

   81 ConversionExpr: LPAREN Type . RPAREN Expression

    RPAREN  shift, and go to state 88


State 47

   45 PrintStmt: PRINT LPAREN . Expression RPAREN SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Expression           go to state 89
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 48

   29 IfStmt: IF Condition . Block
   30       | IF Condition . Block ELSE IfStmt
   31       | IF Condition . Block ELSE Block

    LBRACE  shift, and go to state 5

    Block                      go to state 90
    INCSYBOLTABLECURRENTBRACE  go to state 33


State 49

   32 Condition: Expression .
   47 Expression: Expression . binary_op Expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59
    MUL  shift, and go to state 60
    QUO  shift, and go to state 61
    REM  shift, and go to state 62
    GTR  shift, and go to state 65
    LSS  shift, and go to state 66
    GEQ  shift, and go to state 67
    LEQ  shift, and go to state 68
    EQL  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 77
    OR   shift, and go to state 78

    $default  reduce using rule 32 (Condition)

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 50

   36 ForStmt: FOR LPAREN . ForClause RPAREN Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    AssignmentExpr       go to state 91
    IncDecExpr           go to state 92
    ForClause            go to state 93
    InitStmt             go to state 94
    SimpleExpr           go to state 95
    Expression           go to state 96
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 51

    0 $accept: Program $end .

    $default  accept


State 52

    2 StatementList: Statement StatementList .

    $default  reduce using rule 2 (StatementList)


State 53

   16 AssignmentStmt: AssignmentExpr SEMICOLON .

    $default  reduce using rule 16 (AssignmentStmt)


State 54

   24 ArithmeticStmt: ArithmeticExpr SEMICOLON .

    $default  reduce using rule 24 (ArithmeticStmt)


State 55

   26 IncDecStmt: IncDecExpr SEMICOLON .

    $default  reduce using rule 26 (IncDecStmt)


State 56

   33 WhileStmt: BEGIN WHILE . LPAREN Condition RPAREN Block END

    LPAREN  shift, and go to state 97


State 57

   43 Block: INCSYBOLTABLECURRENTBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 98


State 58

   61 add_op: ADD .

    $default  reduce using rule 61 (add_op)


State 59

   62 add_op: SUB .

    $default  reduce using rule 62 (add_op)


State 60

   63 mul_op: MUL .

    $default  reduce using rule 63 (mul_op)


State 61

   64 mul_op: QUO .

    $default  reduce using rule 64 (mul_op)


State 62

   65 mul_op: REM .

    $default  reduce using rule 65 (mul_op)


State 63

   27 IncDecExpr: Expression INC .

    $default  reduce using rule 27 (IncDecExpr)


State 64

   28 IncDecExpr: Expression DEC .

    $default  reduce using rule 28 (IncDecExpr)


State 65

   59 cmp_op: GTR .

    $default  reduce using rule 59 (cmp_op)


State 66

   57 cmp_op: LSS .

    $default  reduce using rule 57 (cmp_op)


State 67

   60 cmp_op: GEQ .

    $default  reduce using rule 60 (cmp_op)


State 68

   58 cmp_op: LEQ .

    $default  reduce using rule 58 (cmp_op)


State 69

   55 cmp_op: EQL .

    $default  reduce using rule 55 (cmp_op)


State 70

   56 cmp_op: NEQ .

    $default  reduce using rule 56 (cmp_op)


State 71

   18 assign_op: ASSIGN .

    $default  reduce using rule 18 (assign_op)


State 72

   19 assign_op: ADD_ASSIGN .

    $default  reduce using rule 19 (assign_op)


State 73

   20 assign_op: SUB_ASSIGN .

    $default  reduce using rule 20 (assign_op)


State 74

   21 assign_op: MUL_ASSIGN .

    $default  reduce using rule 21 (assign_op)


State 75

   22 assign_op: QUO_ASSIGN .

    $default  reduce using rule 22 (assign_op)


State 76

   23 assign_op: REM_ASSIGN .

    $default  reduce using rule 23 (assign_op)


State 77

   51 binary_op: AND .

    $default  reduce using rule 51 (binary_op)


State 78

   50 binary_op: OR .

    $default  reduce using rule 50 (binary_op)


State 79

   17 AssignmentExpr: Expression assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Expression           go to state 99
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 80

   47 Expression: Expression binary_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Expression           go to state 100
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 81

   52 binary_op: cmp_op .

    $default  reduce using rule 52 (binary_op)


State 82

   53 binary_op: add_op .

    $default  reduce using rule 53 (binary_op)


State 83

   54 binary_op: mul_op .

    $default  reduce using rule 54 (binary_op)


State 84

   49 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 49 (UnaryExpr)


State 85

   80 IndexExpr: PrimaryExpr LBRACK . Expression RBRACK

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Expression           go to state 101
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 86

   47 Expression: Expression . binary_op Expression
   74 Operand: INCPRECEDENCELPAREN Expression . RPAREN

    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    QUO     shift, and go to state 61
    REM     shift, and go to state 62
    GTR     shift, and go to state 65
    LSS     shift, and go to state 66
    GEQ     shift, and go to state 67
    LEQ     shift, and go to state 68
    EQL     shift, and go to state 69
    NEQ     shift, and go to state 70
    AND     shift, and go to state 77
    OR      shift, and go to state 78
    RPAREN  shift, and go to state 102

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 87

   13 DeclarationStmt: Type IDENT . SEMICOLON
   14                | Type IDENT . LBRACK Expression RBRACK SEMICOLON
   15                | Type IDENT . assign_op Expression SEMICOLON

    ASSIGN      shift, and go to state 71
    ADD_ASSIGN  shift, and go to state 72
    SUB_ASSIGN  shift, and go to state 73
    MUL_ASSIGN  shift, and go to state 74
    QUO_ASSIGN  shift, and go to state 75
    REM_ASSIGN  shift, and go to state 76
    LBRACK      shift, and go to state 103
    SEMICOLON   shift, and go to state 104

    assign_op  go to state 105


State 88

   81 ConversionExpr: LPAREN Type RPAREN . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Expression           go to state 106
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 89

   45 PrintStmt: PRINT LPAREN Expression . RPAREN SEMICOLON
   47 Expression: Expression . binary_op Expression

    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    QUO     shift, and go to state 61
    REM     shift, and go to state 62
    GTR     shift, and go to state 65
    LSS     shift, and go to state 66
    GEQ     shift, and go to state 67
    LEQ     shift, and go to state 68
    EQL     shift, and go to state 69
    NEQ     shift, and go to state 70
    AND     shift, and go to state 77
    OR      shift, and go to state 78
    RPAREN  shift, and go to state 107

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 90

   29 IfStmt: IF Condition Block .
   30       | IF Condition Block . ELSE IfStmt
   31       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 108

    $default  reduce using rule 29 (IfStmt)


State 91

   40 SimpleExpr: AssignmentExpr .

    $default  reduce using rule 40 (SimpleExpr)


State 92

   42 SimpleExpr: IncDecExpr .

    $default  reduce using rule 42 (SimpleExpr)


State 93

   36 ForStmt: FOR LPAREN ForClause . RPAREN Block

    RPAREN  shift, and go to state 109


State 94

   37 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 110


State 95

   38 InitStmt: SimpleExpr .

    $default  reduce using rule 38 (InitStmt)


State 96

   17 AssignmentExpr: Expression . assign_op Expression
   27 IncDecExpr: Expression . INC
   28           | Expression . DEC
   41 SimpleExpr: Expression .
   47 Expression: Expression . binary_op Expression

    ADD         shift, and go to state 58
    SUB         shift, and go to state 59
    MUL         shift, and go to state 60
    QUO         shift, and go to state 61
    REM         shift, and go to state 62
    INC         shift, and go to state 63
    DEC         shift, and go to state 64
    GTR         shift, and go to state 65
    LSS         shift, and go to state 66
    GEQ         shift, and go to state 67
    LEQ         shift, and go to state 68
    EQL         shift, and go to state 69
    NEQ         shift, and go to state 70
    ASSIGN      shift, and go to state 71
    ADD_ASSIGN  shift, and go to state 72
    SUB_ASSIGN  shift, and go to state 73
    MUL_ASSIGN  shift, and go to state 74
    QUO_ASSIGN  shift, and go to state 75
    REM_ASSIGN  shift, and go to state 76
    AND         shift, and go to state 77
    OR          shift, and go to state 78

    $default  reduce using rule 41 (SimpleExpr)

    assign_op  go to state 79
    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 97

   33 WhileStmt: BEGIN WHILE LPAREN . Condition RPAREN Block END

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Condition            go to state 111
    Expression           go to state 49
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 98

   43 Block: INCSYBOLTABLECURRENTBRACE StatementList RBRACE .

    $default  reduce using rule 43 (Block)


State 99

   17 AssignmentExpr: Expression assign_op Expression .
   47 Expression: Expression . binary_op Expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59
    MUL  shift, and go to state 60
    QUO  shift, and go to state 61
    REM  shift, and go to state 62
    GTR  shift, and go to state 65
    LSS  shift, and go to state 66
    GEQ  shift, and go to state 67
    LEQ  shift, and go to state 68
    EQL  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 77
    OR   shift, and go to state 78

    $default  reduce using rule 17 (AssignmentExpr)

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 100

   47 Expression: Expression . binary_op Expression
   47           | Expression binary_op Expression .

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59
    MUL  shift, and go to state 60
    QUO  shift, and go to state 61
    REM  shift, and go to state 62
    GTR  shift, and go to state 65
    LSS  shift, and go to state 66
    GEQ  shift, and go to state 67
    LEQ  shift, and go to state 68
    EQL  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 77
    OR   shift, and go to state 78

    ADD       [reduce using rule 47 (Expression)]
    SUB       [reduce using rule 47 (Expression)]
    MUL       [reduce using rule 47 (Expression)]
    QUO       [reduce using rule 47 (Expression)]
    REM       [reduce using rule 47 (Expression)]
    GTR       [reduce using rule 47 (Expression)]
    LSS       [reduce using rule 47 (Expression)]
    GEQ       [reduce using rule 47 (Expression)]
    LEQ       [reduce using rule 47 (Expression)]
    EQL       [reduce using rule 47 (Expression)]
    NEQ       [reduce using rule 47 (Expression)]
    AND       [reduce using rule 47 (Expression)]
    OR        [reduce using rule 47 (Expression)]
    $default  reduce using rule 47 (Expression)

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 101

   47 Expression: Expression . binary_op Expression
   80 IndexExpr: PrimaryExpr LBRACK Expression . RBRACK

    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    QUO     shift, and go to state 61
    REM     shift, and go to state 62
    GTR     shift, and go to state 65
    LSS     shift, and go to state 66
    GEQ     shift, and go to state 67
    LEQ     shift, and go to state 68
    EQL     shift, and go to state 69
    NEQ     shift, and go to state 70
    AND     shift, and go to state 77
    OR      shift, and go to state 78
    RBRACK  shift, and go to state 112

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 102

   74 Operand: INCPRECEDENCELPAREN Expression RPAREN .

    $default  reduce using rule 74 (Operand)


State 103

   14 DeclarationStmt: Type IDENT LBRACK . Expression RBRACK SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Expression           go to state 113
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 104

   13 DeclarationStmt: Type IDENT SEMICOLON .

    $default  reduce using rule 13 (DeclarationStmt)


State 105

   15 DeclarationStmt: Type IDENT assign_op . Expression SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Expression           go to state 114
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 106

   47 Expression: Expression . binary_op Expression
   81 ConversionExpr: LPAREN Type RPAREN Expression .

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59
    MUL  shift, and go to state 60
    QUO  shift, and go to state 61
    REM  shift, and go to state 62
    GTR  shift, and go to state 65
    LSS  shift, and go to state 66
    GEQ  shift, and go to state 67
    LEQ  shift, and go to state 68
    EQL  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 77
    OR   shift, and go to state 78

    ADD       [reduce using rule 81 (ConversionExpr)]
    SUB       [reduce using rule 81 (ConversionExpr)]
    MUL       [reduce using rule 81 (ConversionExpr)]
    QUO       [reduce using rule 81 (ConversionExpr)]
    REM       [reduce using rule 81 (ConversionExpr)]
    GTR       [reduce using rule 81 (ConversionExpr)]
    LSS       [reduce using rule 81 (ConversionExpr)]
    GEQ       [reduce using rule 81 (ConversionExpr)]
    LEQ       [reduce using rule 81 (ConversionExpr)]
    EQL       [reduce using rule 81 (ConversionExpr)]
    NEQ       [reduce using rule 81 (ConversionExpr)]
    AND       [reduce using rule 81 (ConversionExpr)]
    OR        [reduce using rule 81 (ConversionExpr)]
    $default  reduce using rule 81 (ConversionExpr)

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 107

   45 PrintStmt: PRINT LPAREN Expression RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 108

   30 IfStmt: IF Condition Block ELSE . IfStmt
   31       | IF Condition Block ELSE . Block

    LBRACE  shift, and go to state 5
    IF      shift, and go to state 7

    IfStmt                     go to state 116
    Block                      go to state 117
    INCSYBOLTABLECURRENTBRACE  go to state 33


State 109

   36 ForStmt: FOR LPAREN ForClause RPAREN . Block

    LBRACE  shift, and go to state 5

    Block                      go to state 118
    INCSYBOLTABLECURRENTBRACE  go to state 33


State 110

   37 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    Condition            go to state 119
    Expression           go to state 49
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 111

   33 WhileStmt: BEGIN WHILE LPAREN Condition . RPAREN Block END

    RPAREN  shift, and go to state 120


State 112

   80 IndexExpr: PrimaryExpr LBRACK Expression RBRACK .

    $default  reduce using rule 80 (IndexExpr)


State 113

   14 DeclarationStmt: Type IDENT LBRACK Expression . RBRACK SEMICOLON
   47 Expression: Expression . binary_op Expression

    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    QUO     shift, and go to state 61
    REM     shift, and go to state 62
    GTR     shift, and go to state 65
    LSS     shift, and go to state 66
    GEQ     shift, and go to state 67
    LEQ     shift, and go to state 68
    EQL     shift, and go to state 69
    NEQ     shift, and go to state 70
    AND     shift, and go to state 77
    OR      shift, and go to state 78
    RBRACK  shift, and go to state 121

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 114

   15 DeclarationStmt: Type IDENT assign_op Expression . SEMICOLON
   47 Expression: Expression . binary_op Expression

    ADD        shift, and go to state 58
    SUB        shift, and go to state 59
    MUL        shift, and go to state 60
    QUO        shift, and go to state 61
    REM        shift, and go to state 62
    GTR        shift, and go to state 65
    LSS        shift, and go to state 66
    GEQ        shift, and go to state 67
    LEQ        shift, and go to state 68
    EQL        shift, and go to state 69
    NEQ        shift, and go to state 70
    AND        shift, and go to state 77
    OR         shift, and go to state 78
    SEMICOLON  shift, and go to state 122

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 115

   45 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON .

    $default  reduce using rule 45 (PrintStmt)


State 116

   30 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 30 (IfStmt)


State 117

   31 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 31 (IfStmt)


State 118

   36 ForStmt: FOR LPAREN ForClause RPAREN Block .

    $default  reduce using rule 36 (ForStmt)


State 119

   37 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 123


State 120

   33 WhileStmt: BEGIN WHILE LPAREN Condition RPAREN . Block END

    LBRACE  shift, and go to state 5

    Block                      go to state 124
    INCSYBOLTABLECURRENTBRACE  go to state 33


State 121

   14 DeclarationStmt: Type IDENT LBRACK Expression RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 125


State 122

   15 DeclarationStmt: Type IDENT assign_op Expression SEMICOLON .

    $default  reduce using rule 15 (DeclarationStmt)


State 123

   37 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENT       shift, and go to state 12
    BOOL_LIT    shift, and go to state 16

    AssignmentExpr       go to state 91
    IncDecExpr           go to state 92
    PostStmt             go to state 126
    SimpleExpr           go to state 127
    Expression           go to state 96
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 124

   33 WhileStmt: BEGIN WHILE LPAREN Condition RPAREN Block . END

    $default  reduce using rule 35 (END)

    END  go to state 128


State 125

   14 DeclarationStmt: Type IDENT LBRACK Expression RBRACK SEMICOLON .

    $default  reduce using rule 14 (DeclarationStmt)


State 126

   37 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 37 (ForClause)


State 127

   39 PostStmt: SimpleExpr .

    $default  reduce using rule 39 (PostStmt)


State 128

   33 WhileStmt: BEGIN WHILE LPAREN Condition RPAREN Block END .

    $default  reduce using rule 33 (WhileStmt)
