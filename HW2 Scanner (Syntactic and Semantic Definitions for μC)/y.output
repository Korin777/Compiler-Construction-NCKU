State 38 conflicts: 1 shift/reduce
State 100 conflicts: 13 shift/reduce
State 106 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: Statement StatementList
    3              | %empty

    4 Statement: DeclarationStmt
    5          | AssignmentStmt
    6          | ArithmeticStmt
    7          | IncDecStmt
    8          | Block
    9          | IfStmt
   10          | WhileStmt
   11          | ForStmt
   12          | PrintStmt

   13 DeclarationStmt: Type IDENT SEMICOLON
   14                | Type IDENT LBRACK Expression RBRACK SEMICOLON
   15                | Type IDENT assign_op Expression SEMICOLON

   16 AssignmentStmt: AssignmentExpr SEMICOLON

   17 AssignmentExpr: Expression assign_op Expression

   18 assign_op: ASSIGN
   19          | ADD_ASSIGN
   20          | SUB_ASSIGN
   21          | MUL_ASSIGN
   22          | QUO_ASSIGN
   23          | REM_ASSIGN

   24 ArithmeticStmt: ArithmeticExpr SEMICOLON

   25 ArithmeticExpr: Expression

   26 IncDecStmt: IncDecExpr SEMICOLON

   27 IncDecExpr: Expression INC
   28           | Expression DEC

   29 IfStmt: IF Condition Block
   30       | IF Condition Block ELSE IfStmt
   31       | IF Condition Block ELSE Block

   32 Condition: Expression

   33 WhileStmt: WHILE LPAREN Condition RPAREN Block

   34 ForStmt: FOR LPAREN ForClause RPAREN Block

   35 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   36 InitStmt: SimpleExpr

   37 PostStmt: SimpleExpr

   38 SimpleExpr: AssignmentExpr
   39           | Expression
   40           | IncDecExpr

   41 Block: INCSYBOLTABLECURRENTBRACE StatementList RBRACE

   42 INCSYBOLTABLECURRENTBRACE: LBRACE

   43 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON

   44 Expression: UnaryExpr
   45           | Expression binary_op Expression

   46 UnaryExpr: PrimaryExpr
   47          | unary_op UnaryExpr

   48 binary_op: OR
   49          | AND
   50          | cmp_op
   51          | add_op
   52          | mul_op

   53 cmp_op: EQL
   54       | NEQ
   55       | LSS
   56       | LEQ
   57       | GTR
   58       | GEQ

   59 add_op: ADD
   60       | SUB

   61 mul_op: MUL
   62       | QUO
   63       | REM

   64 unary_op: ADD
   65         | SUB
   66         | NOT

   67 PrimaryExpr: Operand
   68            | IndexExpr
   69            | ConversionExpr

   70 Operand: Literal
   71        | IDENT
   72        | INCPRECEDENCELPAREN Expression RPAREN

   73 INCPRECEDENCELPAREN: LPAREN

   74 Literal: INT_LIT
   75        | FLOAT_LIT
   76        | BOOL_LIT
   77        | STRING_LIT

   78 IndexExpr: PrimaryExpr LBRACK Expression RBRACK

   79 ConversionExpr: LPAREN Type RPAREN Expression

   80 Type: TypeName

   81 TypeName: INT
   82         | FLOAT
   83         | STRING
   84         | BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 59 64
SUB (259) 60 65
MUL (260) 61
QUO (261) 62
REM (262) 63
INC (263) 27
DEC (264) 28
GTR (265) 57
LSS (266) 55
GEQ (267) 58
LEQ (268) 56
EQL (269) 53
NEQ (270) 54
ASSIGN (271) 18
ADD_ASSIGN (272) 19
SUB_ASSIGN (273) 20
MUL_ASSIGN (274) 21
QUO_ASSIGN (275) 22
REM_ASSIGN (276) 23
AND (277) 49
OR (278) 48
NOT (279) 66
LPAREN (280) 33 34 43 73 79
RPAREN (281) 33 34 43 72 79
LBRACE (282) 42
RBRACE (283) 41
LBRACK (284) 14 78
RBRACK (285) 14 78
SEMICOLON (286) 13 14 15 16 24 26 35 43
PRINT (287) 43
IF (288) 29 30 31
ELSE (289) 30 31
FOR (290) 34
WHILE (291) 33
INT_LIT (292) 74
FLOAT_LIT (293) 75
STRING_LIT (294) 77
IDENT (295) 13 14 15 71
INT (296) 81
FLOAT (297) 82
STRING (298) 83
BOOL_LIT (299) 76
BOOL (300) 84


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Program (47)
    on left: 1, on right: 0
StatementList (48)
    on left: 2 3, on right: 1 2 41
Statement (49)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2
DeclarationStmt (50)
    on left: 13 14 15, on right: 4
AssignmentStmt (51)
    on left: 16, on right: 5
AssignmentExpr (52)
    on left: 17, on right: 16 38
assign_op (53)
    on left: 18 19 20 21 22 23, on right: 15 17
ArithmeticStmt (54)
    on left: 24, on right: 6
ArithmeticExpr (55)
    on left: 25, on right: 24
IncDecStmt (56)
    on left: 26, on right: 7
IncDecExpr (57)
    on left: 27 28, on right: 26 40
IfStmt (58)
    on left: 29 30 31, on right: 9 30
Condition (59)
    on left: 32, on right: 29 30 31 33 35
WhileStmt (60)
    on left: 33, on right: 10
ForStmt (61)
    on left: 34, on right: 11
ForClause (62)
    on left: 35, on right: 34
InitStmt (63)
    on left: 36, on right: 35
PostStmt (64)
    on left: 37, on right: 35
SimpleExpr (65)
    on left: 38 39 40, on right: 36 37
Block (66)
    on left: 41, on right: 8 29 30 31 33 34
INCSYBOLTABLECURRENTBRACE (67)
    on left: 42, on right: 41
PrintStmt (68)
    on left: 43, on right: 12
Expression (69)
    on left: 44 45, on right: 14 15 17 25 27 28 32 39 43 45 72 78 79
UnaryExpr (70)
    on left: 46 47, on right: 44 47
binary_op (71)
    on left: 48 49 50 51 52, on right: 45
cmp_op (72)
    on left: 53 54 55 56 57 58, on right: 50
add_op (73)
    on left: 59 60, on right: 51
mul_op (74)
    on left: 61 62 63, on right: 52
unary_op (75)
    on left: 64 65 66, on right: 47
PrimaryExpr (76)
    on left: 67 68 69, on right: 46 78
Operand (77)
    on left: 70 71 72, on right: 67
INCPRECEDENCELPAREN (78)
    on left: 73, on right: 72
Literal (79)
    on left: 74 75 76 77, on right: 70
IndexExpr (80)
    on left: 78, on right: 68
ConversionExpr (81)
    on left: 79, on right: 69
Type (82)
    on left: 80, on right: 13 14 15 79
TypeName (83)
    on left: 81 82 83 84, on right: 80


State 0

    0 $accept: . Program $end

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    INT         shift, and go to state 14
    FLOAT       shift, and go to state 15
    STRING      shift, and go to state 16
    BOOL_LIT    shift, and go to state 17
    BOOL        shift, and go to state 18

    $default  reduce using rule 3 (StatementList)

    Program                    go to state 19
    StatementList              go to state 20
    Statement                  go to state 21
    DeclarationStmt            go to state 22
    AssignmentStmt             go to state 23
    AssignmentExpr             go to state 24
    ArithmeticStmt             go to state 25
    ArithmeticExpr             go to state 26
    IncDecStmt                 go to state 27
    IncDecExpr                 go to state 28
    IfStmt                     go to state 29
    WhileStmt                  go to state 30
    ForStmt                    go to state 31
    Block                      go to state 32
    INCSYBOLTABLECURRENTBRACE  go to state 33
    PrintStmt                  go to state 34
    Expression                 go to state 35
    UnaryExpr                  go to state 36
    unary_op                   go to state 37
    PrimaryExpr                go to state 38
    Operand                    go to state 39
    INCPRECEDENCELPAREN        go to state 40
    Literal                    go to state 41
    IndexExpr                  go to state 42
    ConversionExpr             go to state 43
    Type                       go to state 44
    TypeName                   go to state 45


State 1

   64 unary_op: ADD .

    $default  reduce using rule 64 (unary_op)


State 2

   65 unary_op: SUB .

    $default  reduce using rule 65 (unary_op)


State 3

   66 unary_op: NOT .

    $default  reduce using rule 66 (unary_op)


State 4

   73 INCPRECEDENCELPAREN: LPAREN .
   79 ConversionExpr: LPAREN . Type RPAREN Expression

    INT     shift, and go to state 14
    FLOAT   shift, and go to state 15
    STRING  shift, and go to state 16
    BOOL    shift, and go to state 18

    $default  reduce using rule 73 (INCPRECEDENCELPAREN)

    Type      go to state 46
    TypeName  go to state 45


State 5

   42 INCSYBOLTABLECURRENTBRACE: LBRACE .

    $default  reduce using rule 42 (INCSYBOLTABLECURRENTBRACE)


State 6

   43 PrintStmt: PRINT . LPAREN Expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 47


State 7

   29 IfStmt: IF . Condition Block
   30       | IF . Condition Block ELSE IfStmt
   31       | IF . Condition Block ELSE Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Condition            go to state 48
    Expression           go to state 49
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 8

   34 ForStmt: FOR . LPAREN ForClause RPAREN Block

    LPAREN  shift, and go to state 50


State 9

   33 WhileStmt: WHILE . LPAREN Condition RPAREN Block

    LPAREN  shift, and go to state 51


State 10

   74 Literal: INT_LIT .

    $default  reduce using rule 74 (Literal)


State 11

   75 Literal: FLOAT_LIT .

    $default  reduce using rule 75 (Literal)


State 12

   77 Literal: STRING_LIT .

    $default  reduce using rule 77 (Literal)


State 13

   71 Operand: IDENT .

    $default  reduce using rule 71 (Operand)


State 14

   81 TypeName: INT .

    $default  reduce using rule 81 (TypeName)


State 15

   82 TypeName: FLOAT .

    $default  reduce using rule 82 (TypeName)


State 16

   83 TypeName: STRING .

    $default  reduce using rule 83 (TypeName)


State 17

   76 Literal: BOOL_LIT .

    $default  reduce using rule 76 (Literal)


State 18

   84 TypeName: BOOL .

    $default  reduce using rule 84 (TypeName)


State 19

    0 $accept: Program . $end

    $end  shift, and go to state 52


State 20

    1 Program: StatementList .

    $default  reduce using rule 1 (Program)


State 21

    2 StatementList: Statement . StatementList

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    INT         shift, and go to state 14
    FLOAT       shift, and go to state 15
    STRING      shift, and go to state 16
    BOOL_LIT    shift, and go to state 17
    BOOL        shift, and go to state 18

    $default  reduce using rule 3 (StatementList)

    StatementList              go to state 53
    Statement                  go to state 21
    DeclarationStmt            go to state 22
    AssignmentStmt             go to state 23
    AssignmentExpr             go to state 24
    ArithmeticStmt             go to state 25
    ArithmeticExpr             go to state 26
    IncDecStmt                 go to state 27
    IncDecExpr                 go to state 28
    IfStmt                     go to state 29
    WhileStmt                  go to state 30
    ForStmt                    go to state 31
    Block                      go to state 32
    INCSYBOLTABLECURRENTBRACE  go to state 33
    PrintStmt                  go to state 34
    Expression                 go to state 35
    UnaryExpr                  go to state 36
    unary_op                   go to state 37
    PrimaryExpr                go to state 38
    Operand                    go to state 39
    INCPRECEDENCELPAREN        go to state 40
    Literal                    go to state 41
    IndexExpr                  go to state 42
    ConversionExpr             go to state 43
    Type                       go to state 44
    TypeName                   go to state 45


State 22

    4 Statement: DeclarationStmt .

    $default  reduce using rule 4 (Statement)


State 23

    5 Statement: AssignmentStmt .

    $default  reduce using rule 5 (Statement)


State 24

   16 AssignmentStmt: AssignmentExpr . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 25

    6 Statement: ArithmeticStmt .

    $default  reduce using rule 6 (Statement)


State 26

   24 ArithmeticStmt: ArithmeticExpr . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 27

    7 Statement: IncDecStmt .

    $default  reduce using rule 7 (Statement)


State 28

   26 IncDecStmt: IncDecExpr . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 29

    9 Statement: IfStmt .

    $default  reduce using rule 9 (Statement)


State 30

   10 Statement: WhileStmt .

    $default  reduce using rule 10 (Statement)


State 31

   11 Statement: ForStmt .

    $default  reduce using rule 11 (Statement)


State 32

    8 Statement: Block .

    $default  reduce using rule 8 (Statement)


State 33

   41 Block: INCSYBOLTABLECURRENTBRACE . StatementList RBRACE

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACE      shift, and go to state 5
    PRINT       shift, and go to state 6
    IF          shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    INT         shift, and go to state 14
    FLOAT       shift, and go to state 15
    STRING      shift, and go to state 16
    BOOL_LIT    shift, and go to state 17
    BOOL        shift, and go to state 18

    $default  reduce using rule 3 (StatementList)

    StatementList              go to state 57
    Statement                  go to state 21
    DeclarationStmt            go to state 22
    AssignmentStmt             go to state 23
    AssignmentExpr             go to state 24
    ArithmeticStmt             go to state 25
    ArithmeticExpr             go to state 26
    IncDecStmt                 go to state 27
    IncDecExpr                 go to state 28
    IfStmt                     go to state 29
    WhileStmt                  go to state 30
    ForStmt                    go to state 31
    Block                      go to state 32
    INCSYBOLTABLECURRENTBRACE  go to state 33
    PrintStmt                  go to state 34
    Expression                 go to state 35
    UnaryExpr                  go to state 36
    unary_op                   go to state 37
    PrimaryExpr                go to state 38
    Operand                    go to state 39
    INCPRECEDENCELPAREN        go to state 40
    Literal                    go to state 41
    IndexExpr                  go to state 42
    ConversionExpr             go to state 43
    Type                       go to state 44
    TypeName                   go to state 45


State 34

   12 Statement: PrintStmt .

    $default  reduce using rule 12 (Statement)


State 35

   17 AssignmentExpr: Expression . assign_op Expression
   25 ArithmeticExpr: Expression .
   27 IncDecExpr: Expression . INC
   28           | Expression . DEC
   45 Expression: Expression . binary_op Expression

    ADD         shift, and go to state 58
    SUB         shift, and go to state 59
    MUL         shift, and go to state 60
    QUO         shift, and go to state 61
    REM         shift, and go to state 62
    INC         shift, and go to state 63
    DEC         shift, and go to state 64
    GTR         shift, and go to state 65
    LSS         shift, and go to state 66
    GEQ         shift, and go to state 67
    LEQ         shift, and go to state 68
    EQL         shift, and go to state 69
    NEQ         shift, and go to state 70
    ASSIGN      shift, and go to state 71
    ADD_ASSIGN  shift, and go to state 72
    SUB_ASSIGN  shift, and go to state 73
    MUL_ASSIGN  shift, and go to state 74
    QUO_ASSIGN  shift, and go to state 75
    REM_ASSIGN  shift, and go to state 76
    AND         shift, and go to state 77
    OR          shift, and go to state 78

    $default  reduce using rule 25 (ArithmeticExpr)

    assign_op  go to state 79
    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 36

   44 Expression: UnaryExpr .

    $default  reduce using rule 44 (Expression)


State 37

   47 UnaryExpr: unary_op . UnaryExpr

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    UnaryExpr            go to state 84
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 38

   46 UnaryExpr: PrimaryExpr .
   78 IndexExpr: PrimaryExpr . LBRACK Expression RBRACK

    LBRACK  shift, and go to state 85

    LBRACK    [reduce using rule 46 (UnaryExpr)]
    $default  reduce using rule 46 (UnaryExpr)


State 39

   67 PrimaryExpr: Operand .

    $default  reduce using rule 67 (PrimaryExpr)


State 40

   72 Operand: INCPRECEDENCELPAREN . Expression RPAREN

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Expression           go to state 86
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 41

   70 Operand: Literal .

    $default  reduce using rule 70 (Operand)


State 42

   68 PrimaryExpr: IndexExpr .

    $default  reduce using rule 68 (PrimaryExpr)


State 43

   69 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 69 (PrimaryExpr)


State 44

   13 DeclarationStmt: Type . IDENT SEMICOLON
   14                | Type . IDENT LBRACK Expression RBRACK SEMICOLON
   15                | Type . IDENT assign_op Expression SEMICOLON

    IDENT  shift, and go to state 87


State 45

   80 Type: TypeName .

    $default  reduce using rule 80 (Type)


State 46

   79 ConversionExpr: LPAREN Type . RPAREN Expression

    RPAREN  shift, and go to state 88


State 47

   43 PrintStmt: PRINT LPAREN . Expression RPAREN SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Expression           go to state 89
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 48

   29 IfStmt: IF Condition . Block
   30       | IF Condition . Block ELSE IfStmt
   31       | IF Condition . Block ELSE Block

    LBRACE  shift, and go to state 5

    Block                      go to state 90
    INCSYBOLTABLECURRENTBRACE  go to state 33


State 49

   32 Condition: Expression .
   45 Expression: Expression . binary_op Expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59
    MUL  shift, and go to state 60
    QUO  shift, and go to state 61
    REM  shift, and go to state 62
    GTR  shift, and go to state 65
    LSS  shift, and go to state 66
    GEQ  shift, and go to state 67
    LEQ  shift, and go to state 68
    EQL  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 77
    OR   shift, and go to state 78

    $default  reduce using rule 32 (Condition)

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 50

   34 ForStmt: FOR LPAREN . ForClause RPAREN Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    AssignmentExpr       go to state 91
    IncDecExpr           go to state 92
    ForClause            go to state 93
    InitStmt             go to state 94
    SimpleExpr           go to state 95
    Expression           go to state 96
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 51

   33 WhileStmt: WHILE LPAREN . Condition RPAREN Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Condition            go to state 97
    Expression           go to state 49
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 52

    0 $accept: Program $end .

    $default  accept


State 53

    2 StatementList: Statement StatementList .

    $default  reduce using rule 2 (StatementList)


State 54

   16 AssignmentStmt: AssignmentExpr SEMICOLON .

    $default  reduce using rule 16 (AssignmentStmt)


State 55

   24 ArithmeticStmt: ArithmeticExpr SEMICOLON .

    $default  reduce using rule 24 (ArithmeticStmt)


State 56

   26 IncDecStmt: IncDecExpr SEMICOLON .

    $default  reduce using rule 26 (IncDecStmt)


State 57

   41 Block: INCSYBOLTABLECURRENTBRACE StatementList . RBRACE

    RBRACE  shift, and go to state 98


State 58

   59 add_op: ADD .

    $default  reduce using rule 59 (add_op)


State 59

   60 add_op: SUB .

    $default  reduce using rule 60 (add_op)


State 60

   61 mul_op: MUL .

    $default  reduce using rule 61 (mul_op)


State 61

   62 mul_op: QUO .

    $default  reduce using rule 62 (mul_op)


State 62

   63 mul_op: REM .

    $default  reduce using rule 63 (mul_op)


State 63

   27 IncDecExpr: Expression INC .

    $default  reduce using rule 27 (IncDecExpr)


State 64

   28 IncDecExpr: Expression DEC .

    $default  reduce using rule 28 (IncDecExpr)


State 65

   57 cmp_op: GTR .

    $default  reduce using rule 57 (cmp_op)


State 66

   55 cmp_op: LSS .

    $default  reduce using rule 55 (cmp_op)


State 67

   58 cmp_op: GEQ .

    $default  reduce using rule 58 (cmp_op)


State 68

   56 cmp_op: LEQ .

    $default  reduce using rule 56 (cmp_op)


State 69

   53 cmp_op: EQL .

    $default  reduce using rule 53 (cmp_op)


State 70

   54 cmp_op: NEQ .

    $default  reduce using rule 54 (cmp_op)


State 71

   18 assign_op: ASSIGN .

    $default  reduce using rule 18 (assign_op)


State 72

   19 assign_op: ADD_ASSIGN .

    $default  reduce using rule 19 (assign_op)


State 73

   20 assign_op: SUB_ASSIGN .

    $default  reduce using rule 20 (assign_op)


State 74

   21 assign_op: MUL_ASSIGN .

    $default  reduce using rule 21 (assign_op)


State 75

   22 assign_op: QUO_ASSIGN .

    $default  reduce using rule 22 (assign_op)


State 76

   23 assign_op: REM_ASSIGN .

    $default  reduce using rule 23 (assign_op)


State 77

   49 binary_op: AND .

    $default  reduce using rule 49 (binary_op)


State 78

   48 binary_op: OR .

    $default  reduce using rule 48 (binary_op)


State 79

   17 AssignmentExpr: Expression assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Expression           go to state 99
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 80

   45 Expression: Expression binary_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Expression           go to state 100
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 81

   50 binary_op: cmp_op .

    $default  reduce using rule 50 (binary_op)


State 82

   51 binary_op: add_op .

    $default  reduce using rule 51 (binary_op)


State 83

   52 binary_op: mul_op .

    $default  reduce using rule 52 (binary_op)


State 84

   47 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 47 (UnaryExpr)


State 85

   78 IndexExpr: PrimaryExpr LBRACK . Expression RBRACK

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Expression           go to state 101
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 86

   45 Expression: Expression . binary_op Expression
   72 Operand: INCPRECEDENCELPAREN Expression . RPAREN

    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    QUO     shift, and go to state 61
    REM     shift, and go to state 62
    GTR     shift, and go to state 65
    LSS     shift, and go to state 66
    GEQ     shift, and go to state 67
    LEQ     shift, and go to state 68
    EQL     shift, and go to state 69
    NEQ     shift, and go to state 70
    AND     shift, and go to state 77
    OR      shift, and go to state 78
    RPAREN  shift, and go to state 102

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 87

   13 DeclarationStmt: Type IDENT . SEMICOLON
   14                | Type IDENT . LBRACK Expression RBRACK SEMICOLON
   15                | Type IDENT . assign_op Expression SEMICOLON

    ASSIGN      shift, and go to state 71
    ADD_ASSIGN  shift, and go to state 72
    SUB_ASSIGN  shift, and go to state 73
    MUL_ASSIGN  shift, and go to state 74
    QUO_ASSIGN  shift, and go to state 75
    REM_ASSIGN  shift, and go to state 76
    LBRACK      shift, and go to state 103
    SEMICOLON   shift, and go to state 104

    assign_op  go to state 105


State 88

   79 ConversionExpr: LPAREN Type RPAREN . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Expression           go to state 106
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 89

   43 PrintStmt: PRINT LPAREN Expression . RPAREN SEMICOLON
   45 Expression: Expression . binary_op Expression

    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    QUO     shift, and go to state 61
    REM     shift, and go to state 62
    GTR     shift, and go to state 65
    LSS     shift, and go to state 66
    GEQ     shift, and go to state 67
    LEQ     shift, and go to state 68
    EQL     shift, and go to state 69
    NEQ     shift, and go to state 70
    AND     shift, and go to state 77
    OR      shift, and go to state 78
    RPAREN  shift, and go to state 107

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 90

   29 IfStmt: IF Condition Block .
   30       | IF Condition Block . ELSE IfStmt
   31       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 108

    $default  reduce using rule 29 (IfStmt)


State 91

   38 SimpleExpr: AssignmentExpr .

    $default  reduce using rule 38 (SimpleExpr)


State 92

   40 SimpleExpr: IncDecExpr .

    $default  reduce using rule 40 (SimpleExpr)


State 93

   34 ForStmt: FOR LPAREN ForClause . RPAREN Block

    RPAREN  shift, and go to state 109


State 94

   35 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 110


State 95

   36 InitStmt: SimpleExpr .

    $default  reduce using rule 36 (InitStmt)


State 96

   17 AssignmentExpr: Expression . assign_op Expression
   27 IncDecExpr: Expression . INC
   28           | Expression . DEC
   39 SimpleExpr: Expression .
   45 Expression: Expression . binary_op Expression

    ADD         shift, and go to state 58
    SUB         shift, and go to state 59
    MUL         shift, and go to state 60
    QUO         shift, and go to state 61
    REM         shift, and go to state 62
    INC         shift, and go to state 63
    DEC         shift, and go to state 64
    GTR         shift, and go to state 65
    LSS         shift, and go to state 66
    GEQ         shift, and go to state 67
    LEQ         shift, and go to state 68
    EQL         shift, and go to state 69
    NEQ         shift, and go to state 70
    ASSIGN      shift, and go to state 71
    ADD_ASSIGN  shift, and go to state 72
    SUB_ASSIGN  shift, and go to state 73
    MUL_ASSIGN  shift, and go to state 74
    QUO_ASSIGN  shift, and go to state 75
    REM_ASSIGN  shift, and go to state 76
    AND         shift, and go to state 77
    OR          shift, and go to state 78

    $default  reduce using rule 39 (SimpleExpr)

    assign_op  go to state 79
    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 97

   33 WhileStmt: WHILE LPAREN Condition . RPAREN Block

    RPAREN  shift, and go to state 111


State 98

   41 Block: INCSYBOLTABLECURRENTBRACE StatementList RBRACE .

    $default  reduce using rule 41 (Block)


State 99

   17 AssignmentExpr: Expression assign_op Expression .
   45 Expression: Expression . binary_op Expression

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59
    MUL  shift, and go to state 60
    QUO  shift, and go to state 61
    REM  shift, and go to state 62
    GTR  shift, and go to state 65
    LSS  shift, and go to state 66
    GEQ  shift, and go to state 67
    LEQ  shift, and go to state 68
    EQL  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 77
    OR   shift, and go to state 78

    $default  reduce using rule 17 (AssignmentExpr)

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 100

   45 Expression: Expression . binary_op Expression
   45           | Expression binary_op Expression .

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59
    MUL  shift, and go to state 60
    QUO  shift, and go to state 61
    REM  shift, and go to state 62
    GTR  shift, and go to state 65
    LSS  shift, and go to state 66
    GEQ  shift, and go to state 67
    LEQ  shift, and go to state 68
    EQL  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 77
    OR   shift, and go to state 78

    ADD       [reduce using rule 45 (Expression)]
    SUB       [reduce using rule 45 (Expression)]
    MUL       [reduce using rule 45 (Expression)]
    QUO       [reduce using rule 45 (Expression)]
    REM       [reduce using rule 45 (Expression)]
    GTR       [reduce using rule 45 (Expression)]
    LSS       [reduce using rule 45 (Expression)]
    GEQ       [reduce using rule 45 (Expression)]
    LEQ       [reduce using rule 45 (Expression)]
    EQL       [reduce using rule 45 (Expression)]
    NEQ       [reduce using rule 45 (Expression)]
    AND       [reduce using rule 45 (Expression)]
    OR        [reduce using rule 45 (Expression)]
    $default  reduce using rule 45 (Expression)

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 101

   45 Expression: Expression . binary_op Expression
   78 IndexExpr: PrimaryExpr LBRACK Expression . RBRACK

    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    QUO     shift, and go to state 61
    REM     shift, and go to state 62
    GTR     shift, and go to state 65
    LSS     shift, and go to state 66
    GEQ     shift, and go to state 67
    LEQ     shift, and go to state 68
    EQL     shift, and go to state 69
    NEQ     shift, and go to state 70
    AND     shift, and go to state 77
    OR      shift, and go to state 78
    RBRACK  shift, and go to state 112

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 102

   72 Operand: INCPRECEDENCELPAREN Expression RPAREN .

    $default  reduce using rule 72 (Operand)


State 103

   14 DeclarationStmt: Type IDENT LBRACK . Expression RBRACK SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Expression           go to state 113
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 104

   13 DeclarationStmt: Type IDENT SEMICOLON .

    $default  reduce using rule 13 (DeclarationStmt)


State 105

   15 DeclarationStmt: Type IDENT assign_op . Expression SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Expression           go to state 114
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 106

   45 Expression: Expression . binary_op Expression
   79 ConversionExpr: LPAREN Type RPAREN Expression .

    ADD  shift, and go to state 58
    SUB  shift, and go to state 59
    MUL  shift, and go to state 60
    QUO  shift, and go to state 61
    REM  shift, and go to state 62
    GTR  shift, and go to state 65
    LSS  shift, and go to state 66
    GEQ  shift, and go to state 67
    LEQ  shift, and go to state 68
    EQL  shift, and go to state 69
    NEQ  shift, and go to state 70
    AND  shift, and go to state 77
    OR   shift, and go to state 78

    ADD       [reduce using rule 79 (ConversionExpr)]
    SUB       [reduce using rule 79 (ConversionExpr)]
    MUL       [reduce using rule 79 (ConversionExpr)]
    QUO       [reduce using rule 79 (ConversionExpr)]
    REM       [reduce using rule 79 (ConversionExpr)]
    GTR       [reduce using rule 79 (ConversionExpr)]
    LSS       [reduce using rule 79 (ConversionExpr)]
    GEQ       [reduce using rule 79 (ConversionExpr)]
    LEQ       [reduce using rule 79 (ConversionExpr)]
    EQL       [reduce using rule 79 (ConversionExpr)]
    NEQ       [reduce using rule 79 (ConversionExpr)]
    AND       [reduce using rule 79 (ConversionExpr)]
    OR        [reduce using rule 79 (ConversionExpr)]
    $default  reduce using rule 79 (ConversionExpr)

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 107

   43 PrintStmt: PRINT LPAREN Expression RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 108

   30 IfStmt: IF Condition Block ELSE . IfStmt
   31       | IF Condition Block ELSE . Block

    LBRACE  shift, and go to state 5
    IF      shift, and go to state 7

    IfStmt                     go to state 116
    Block                      go to state 117
    INCSYBOLTABLECURRENTBRACE  go to state 33


State 109

   34 ForStmt: FOR LPAREN ForClause RPAREN . Block

    LBRACE  shift, and go to state 5

    Block                      go to state 118
    INCSYBOLTABLECURRENTBRACE  go to state 33


State 110

   35 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    Condition            go to state 119
    Expression           go to state 49
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 111

   33 WhileStmt: WHILE LPAREN Condition RPAREN . Block

    LBRACE  shift, and go to state 5

    Block                      go to state 120
    INCSYBOLTABLECURRENTBRACE  go to state 33


State 112

   78 IndexExpr: PrimaryExpr LBRACK Expression RBRACK .

    $default  reduce using rule 78 (IndexExpr)


State 113

   14 DeclarationStmt: Type IDENT LBRACK Expression . RBRACK SEMICOLON
   45 Expression: Expression . binary_op Expression

    ADD     shift, and go to state 58
    SUB     shift, and go to state 59
    MUL     shift, and go to state 60
    QUO     shift, and go to state 61
    REM     shift, and go to state 62
    GTR     shift, and go to state 65
    LSS     shift, and go to state 66
    GEQ     shift, and go to state 67
    LEQ     shift, and go to state 68
    EQL     shift, and go to state 69
    NEQ     shift, and go to state 70
    AND     shift, and go to state 77
    OR      shift, and go to state 78
    RBRACK  shift, and go to state 121

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 114

   15 DeclarationStmt: Type IDENT assign_op Expression . SEMICOLON
   45 Expression: Expression . binary_op Expression

    ADD        shift, and go to state 58
    SUB        shift, and go to state 59
    MUL        shift, and go to state 60
    QUO        shift, and go to state 61
    REM        shift, and go to state 62
    GTR        shift, and go to state 65
    LSS        shift, and go to state 66
    GEQ        shift, and go to state 67
    LEQ        shift, and go to state 68
    EQL        shift, and go to state 69
    NEQ        shift, and go to state 70
    AND        shift, and go to state 77
    OR         shift, and go to state 78
    SEMICOLON  shift, and go to state 122

    binary_op  go to state 80
    cmp_op     go to state 81
    add_op     go to state 82
    mul_op     go to state 83


State 115

   43 PrintStmt: PRINT LPAREN Expression RPAREN SEMICOLON .

    $default  reduce using rule 43 (PrintStmt)


State 116

   30 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 30 (IfStmt)


State 117

   31 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 31 (IfStmt)


State 118

   34 ForStmt: FOR LPAREN ForClause RPAREN Block .

    $default  reduce using rule 34 (ForStmt)


State 119

   35 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 123


State 120

   33 WhileStmt: WHILE LPAREN Condition RPAREN Block .

    $default  reduce using rule 33 (WhileStmt)


State 121

   14 DeclarationStmt: Type IDENT LBRACK Expression RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 124


State 122

   15 DeclarationStmt: Type IDENT assign_op Expression SEMICOLON .

    $default  reduce using rule 15 (DeclarationStmt)


State 123

   35 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    INT_LIT     shift, and go to state 10
    FLOAT_LIT   shift, and go to state 11
    STRING_LIT  shift, and go to state 12
    IDENT       shift, and go to state 13
    BOOL_LIT    shift, and go to state 17

    AssignmentExpr       go to state 91
    IncDecExpr           go to state 92
    PostStmt             go to state 125
    SimpleExpr           go to state 126
    Expression           go to state 96
    UnaryExpr            go to state 36
    unary_op             go to state 37
    PrimaryExpr          go to state 38
    Operand              go to state 39
    INCPRECEDENCELPAREN  go to state 40
    Literal              go to state 41
    IndexExpr            go to state 42
    ConversionExpr       go to state 43


State 124

   14 DeclarationStmt: Type IDENT LBRACK Expression RBRACK SEMICOLON .

    $default  reduce using rule 14 (DeclarationStmt)


State 125

   35 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 35 (ForClause)


State 126

   37 PostStmt: SimpleExpr .

    $default  reduce using rule 37 (PostStmt)
